diff --git a/super_login.admin.inc b/super_login.admin.inc
index 0ff351e..61f357c 100644
--- a/super_login.admin.inc
+++ b/super_login.admin.inc
@@ -1,6 +1,6 @@
 <?php
 
-function super_login_admin_form() {  
+function super_login_admin_form() {
   $form['text'] = array(
     '#type' => 'fieldset',
     '#title' => t('Text String Options'),
@@ -47,46 +47,52 @@ function super_login_admin_form() {
     '#default_value' => variable_get('super_login_back_link', 'Go back to the login page.'),
     '#description' => 'Enter the text to be displayed for the "back to login page" link.',
   );
-  
+
  $form['options'] = array(
     '#type' => 'fieldset',
     '#title' => t('Configuration Options'),
   );
   $form['options']['super_login_css'] = array(
     '#type'  => 'checkbox',
-    '#title' => t('Enable module CSS (stylesheet)'),    
-    '#default_value' => variable_get('super_login_css', 1),    
-    '#description' => t('Disable this option to turn off this module\'s CSS style sheet. If disabled, you should provide your own styling through your theme\'s stylesheet.'),    
+    '#title' => t('Enable module CSS (stylesheet)'),
+    '#default_value' => variable_get('super_login_css', 1),
+    '#description' => t('Disable this option to turn off this module\'s CSS style sheet. If disabled, you should provide your own styling through your theme\'s stylesheet.'),
   );
   $form['options']['super_login_button_image'] = array(
     '#type'  => 'checkbox',
-    '#title' => t('Enable image replacement for submit buttons'),    
-    '#default_value' => variable_get('super_login_button_image', 1),        
+    '#title' => t('Enable image replacement for submit buttons'),
+    '#default_value' => variable_get('super_login_button_image', 1),
     '#description' => t('Disable this option to remove the images on the submit buttons.'),
   );
   $form['options']['super_login_submit_text'] = array(
     '#type'  => 'textfield',
-    '#title' => t('Enter the text to display on the submit button'),    
-    '#default_value' => variable_get('super_login_submit_text', 'Log in'),        
+    '#title' => t('Enter the text to display on the submit button'),
+    '#default_value' => variable_get('super_login_submit_text', 'Log in'),
     '#description' => t('Disable this option to remove the images on the submit buttons.'),
     '#states' => array(
       'visible' => array(':input[name=super_login_button_image]' => array('checked' => FALSE)),
-    ),    
+    ),
   );
   $form['options']['super_login_autofill'] = array(
     '#type'  => 'checkbox',
-    '#title' => t('Enable autofill features for browsers'),    
-    '#default_value' => variable_get('super_login_autofill', 1),    
-    '#description' => t('Disable this option to disable the autofill feature used by browsers to will fill in the login form username and password automatically. Note that it appears later versions of Chrome now ignore this setting.'),    
+    '#title' => t('Enable autofill features for browsers'),
+    '#default_value' => variable_get('super_login_autofill', 1),
+    '#description' => t('Disable this option to disable the autofill feature used by browsers to will fill in the login form username and password automatically. Note that it appears later versions of Chrome now ignore this setting.'),
+  );
+  $form['options']['super_login_autofocus'] = array(
+    '#type'  => 'checkbox',
+    '#title' => t('Enable autofocus for username field'),
+    '#default_value' => variable_get('super_login_autofocus', 0),
+    '#description' => t('Enable this option for browsers to automatically set the focus in username field. '),
   );
   $form['options']['super_login_placeholder'] = array(
     '#type'  => 'checkbox',
-    '#title' => t('Enable "placehold" text within fields.'),    
-    '#default_value' => variable_get('super_login_placeholder', 1),    
-    '#description' => t('Disable this option to remove the placeholder text within the login and password reset fields.'),    
+    '#title' => t('Enable "placehold" text within fields.'),
+    '#default_value' => variable_get('super_login_placeholder', 1),
+    '#description' => t('Disable this option to remove the placeholder text within the login and password reset fields.'),
   );
 
-  
+
   return system_settings_form($form);
 
-}
\ No newline at end of file
+}
diff --git a/super_login.install b/super_login.install
index 5c901e5..aeae752 100644
--- a/super_login.install
+++ b/super_login.install
@@ -3,7 +3,7 @@
 /**
  * @file
  */
- 
+
 /**
  * Implements hook_install().
  */
@@ -18,17 +18,18 @@ function super_login_install() {
 function super_login_uninstall() {
   variable_del('super_login_forgot_pw_text');
   variable_del('super_login_log_in_text');
-  variable_del('super_login_capslock_msg'); 
-  variable_del('super_login_new_account_text'); 
-  variable_del('super_login_login_title'); 
-  variable_del('super_login_password_reset_title'); 
-  variable_del('super_login_back_link'); 
-  variable_del('super_login_button_image'); 
-  variable_del('super_login_autofill');   
+  variable_del('super_login_capslock_msg');
+  variable_del('super_login_new_account_text');
+  variable_del('super_login_login_title');
+  variable_del('super_login_password_reset_title');
+  variable_del('super_login_back_link');
+  variable_del('super_login_button_image');
+  variable_del('super_login_autofill');
   variable_del('super_login_placeholder');
   variable_del('super_login_css');
   variable_del('super_login_button_image');
-  variable_del('super_login_autofill');
+  variable_del('super_login_autofocus');
   variable_del('super_login_placeholder');
+  variable_del('super_login_submit_text');
 }
 
diff --git a/super_login.module b/super_login.module
index 77790a1..bb1e187 100755
--- a/super_login.module
+++ b/super_login.module
@@ -9,26 +9,26 @@
 /**
 * Implementation of hook_menu
 */
-function super_login_menu() {    
+function super_login_menu() {
   $items['admin/config/user-interface/super-login'] = array(
       'title' => t('Super Login'),
       'description' => t('Configure improvements to the Drupal login page.'),
       'file' => 'super_login.admin.inc',
       'page callback' => 'drupal_get_form',
-      'page arguments' => array('super_login_admin_form'),          
+      'page arguments' => array('super_login_admin_form'),
       'access arguments' => array('administer super login'),
-    );                
+    );
     return $items;
-} 
+}
 
 /**
 * Implementation of hook_menu_alter
 * Remove tabs from login, registration and password reset pages
 */
-function super_login_menu_alter(&$items) {  
+function super_login_menu_alter(&$items) {
   $items['user/register']['type'] = MENU_CALLBACK;
   $items['user/login']['type'] = MENU_CALLBACK;
-  $items['user/password']['type'] = MENU_CALLBACK;  
+  $items['user/password']['type'] = MENU_CALLBACK;
 }
 
 /**
@@ -40,17 +40,19 @@ function super_login_permission(){
       'title' => t('Administer super login'),
       'description' => t('Perform administration tasks for the Super Login module.'),
     ),
-  );  
+  );
 }
 
  /**
  * Implementation of hook_form_alter(). *
- *  
+ *
  */
-function super_login_form_alter(&$form, &$form_state, $form_id) {  
+function super_login_form_alter(&$form, &$form_state, $form_id) {
   if ($form_id == 'user_login' || $form_id == 'user_pass'|| $form_id == 'user_login_block') {
-    // Global form functions          
-    $form['name']['#attributes']['autofocus'] = 'autofocus';    
+    // Global form functions
+  if (variable_get('super_login_autofocus', 0)){
+    $form['name']['#attributes']['autofocus'] = 'autofocus';
+  }
     unset($form['name']['#description']);
     unset($form['pass']['#description']);
     $path = drupal_get_path('module', 'super_login');
@@ -60,62 +62,62 @@ function super_login_form_alter(&$form, &$form_state, $form_id) {
           $form['#attached']['css'][] = $path .'/css/super-login-buttons.css';
         }
       }
-  }  
-  
+  }
+
   switch ($form_id) {
     case 'user_login':
       $form['#attached']['js'][] = $path . '/js/super-login.js';
-      $form['title'] = array(        
+      $form['title'] = array(
         '#markup' => '<p class="login-title">' . t(variable_get('super_login_log_in_text', 'Log In')) . '</p>',
-        '#weight' => -100,        
-      );            
+        '#weight' => -100,
+      );
       $link = l(t(variable_get('super_login_forgot_pw_text', 'Forgot Password?')), 'user/password', array('attributes' => array('title' => t('Get a new password'))));
       $form['reset'] = array(
         '#markup' => '<p class="forgot-password">' . $link . '</p>',
-        '#weight' => 1,        
+        '#weight' => 1,
       );
       $form['capslock'] = array(
         '#markup' => '<div id="capslockdiv"><p style="display: none;">' .  t(variable_get('super_login_capslock_msg', 'Caps Lock On')) . '</p></div>',
-        '#weight' => 2,        
-      );       
-      
+        '#weight' => 2,
+      );
+
       if (user_register_access()):
-        $actions_suffix = '<div class="actions-suffix">';    
+        $actions_suffix = '<div class="actions-suffix">';
         $actions_suffix .= l(t(variable_get('super_login_new_account_text', 'Create new account')), 'user/register', array('attributes' => array('class' => 'super-login-register', 'title' => t('Create a new user account'))));
         $actions_suffix .= '</div>';
         $form['actions']['#suffix'] = $actions_suffix;
-      endif;      
-      
+      endif;
+
       $form['name']['#title'] = t(variable_get('super_login_login_title', 'Username or e-mail address'));
       $form['name']['#size'] = 50;
-      $form['pass']['#size'] = 50;      
-      
+      $form['pass']['#size'] = 50;
+
       // Set form placeholder text
       if (variable_get('super_login_placeholder', 1)){
-        $form['name']['#attributes']['title'] = $form['name']['#title'];      
+        $form['name']['#attributes']['title'] = $form['name']['#title'];
         $form['pass']['#attributes']['title'] = $form['pass']['#title'];
         $form['name']['#attributes']['placeholder'] = $form['name']['#title'];
-        $form['pass']['#attributes']['placeholder'] = $form['pass']['#title'];  
+        $form['pass']['#attributes']['placeholder'] = $form['pass']['#title'];
       }
-            
+
       // If logintoboggan is installed and email login email is enabled then skip our own email login modification
-      if (!(module_exists('logintoboggan') && variable_get('logintoboggan_login_with_email', 0))){       
+      if (!(module_exists('logintoboggan') && variable_get('logintoboggan_login_with_email', 0))){
         // Ensure a valid validate array to allow login with e-mail address.
         $form['#validate'] = is_array($form['#validate']) ? $form['#validate'] : array();
         // LT's validation function must run first.
-        array_unshift($form['#validate'],'super_login_user_login_validate');  
+        array_unshift($form['#validate'],'super_login_user_login_validate');
       }
-      
+
       if (!variable_get('super_login_autofill', 1)){
         $form['#attributes']['autocomplete'] = 'off';
         $form['name']['#attributes']['autocomplete'] = 'off';
         $form['pass']['#attributes']['autocomplete'] = 'off';
       }
-      if (!variable_get('super_login_button_image', 1)){      
+      if (!variable_get('super_login_button_image', 1)){
         $form['actions']['submit']['#value'] = t(variable_get('super_login_submit_text', 'Log in'));
       }
       break;
-      
+
     case 'user_login_block':
       $form['#attached']['js'][] = $path . '/js/super-login.js';
 
@@ -147,19 +149,19 @@ function super_login_form_alter(&$form, &$form_state, $form_id) {
         $form['pass']['#attributes']['autocomplete'] = 'off';
       }
       break;
-      
-    case 'user_pass':      
+
+    case 'user_pass':
       $form['#attached']['js'][] = $path . '/js/super-login-pw.js';
-      
+
       $form['title'] = array(
         '#markup' => '<p class="login-title">' . t(variable_get('super_login_password_reset_title', 'Password Reset')) . '</p>',
-        '#weight' => -100,        
+        '#weight' => -100,
       );
       $link = l(t(variable_get('super_login_back_link', 'Back to login page')), 'user/login', array('attributes' => array('title' => variable_get('super_login_back_link', 'Go back to the login page.'))));
       $form['reset'] = array(
         '#markup' => '<p class="back-to-login">' . $link . '</p>',
-        '#weight' => 1,        
-      );      
+        '#weight' => 1,
+      );
       break;
   }
 }
@@ -167,7 +169,7 @@ function super_login_form_alter(&$form, &$form_state, $form_id) {
 function super_login_form_user_pass_alter(&$form, &$form_state, $form_id) {
   if (variable_get('super_login_placeholder', 1)){
     $form['name']['#attributes']['title'] = $form['name']['#title'];
-    $form['name']['#attributes']['placeholder'] = $form['name']['#title'];  
+    $form['name']['#attributes']['placeholder'] = $form['name']['#title'];
   }
 }
 
